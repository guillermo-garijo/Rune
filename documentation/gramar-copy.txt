doc:[main $,func main $]
func:[type value ᚬ logic ᚯ func, #]
main:[ᛖ ᚬ logic ᚯ]
logic:[if logic, for logic,decl logic,return logic,break logic,asign logic,#]
return:[ᚱ return']
return':[valor ᛫,᛫]
break:[ᚴ ᛫]
valor:[id,int,bool,char,float,op,eps]
int:[dig dig]
dig:[ᚁ,ᚂ,ᚃ,ᚄ,ᚅ,ᚆ,ᚇ,ᚈ,ᚉ,ᚊ]
bool:[ᛉ,ᛣ]
char:[todo]
float:[int ᛍ int]
op:[conditions,arit_op]
arit_op:[arit_op',arit_op' ᚦ arit_op,arit_op' ᚧ arit_op,#]
arit_op':[arit_op'' arit_op''']
arit_op''':[ᚺ arit_op'' arit_op''',ᚻ arit_op'' arit_op''',#]
arit_op'':[valor,( arit_op )]
asign:[valor ᛃ valor,#]
type:[ᚨ,ᚩ,ᚪ,ᚫ]
if:[ᚢ ᚾ conditions ᛅ ᚬ logic ᚯ if']
if':[elseif,else,#]
elseif:[ᚤ ᚾ conditions ᛅ ᚬ logic ᚯ elseif']
elseif':[elseif,else,#]
else:[ᚥ ᚬ logic ᚯ,#]
conditions:[log_op conditions,ᚾ log_op conditions ᛅ,ᛩ conditions',ᚹ conditions',#]
conditions':[log_op conditions,log_op conditions,ᚾ log_op conditions ᛅ,ᚾ log_op conditions ᛅ,#]
log_op:[valor log_op',ᛝ valor log_op']
log_op':[ᚿ log_op'',ᛆ log_op'',#]
log_op'':[log_op,ᛃ log_op]
for:[ᛯ ᚾ for_cond ᛅ ᚬ logic ᚯ]
for_cond:[decl ᛫ conditions ᛫ arit_op,asign ᛫ conditions ᛫ arit_op]
decl:[type id decl' ᛫,#]
decl':[ᛃ valor,#]


valor:[id,int,bool,char,float,op,#]
op:[conditions,arit_op]
conditions:[log_op conditions,ᚾ log_op conditions ᛅ,ᛩ conditions',ᚹ conditions',#]
log_op:[id log_op',int log_op',bool log_op',char log_op',float log_op',log_op conditions log_op',ᚾ log_op conditions ᛅ log_op',ᛩ conditions' log_op',ᚹ conditions' log_op',log_op',arit_op log_op',log_op',ᛝ valor log_op']

log_op''':[conditions log_op' log_op''',#]
log_op:[id log_op' log_op''',int log_op' log_op''',bool log_op' log_op''',char log_op' log_op''',float log_op' log_op''',ᚾ log_op conditions ᛅ log_op' log_op''',ᛩ conditions' log_op' log_op''',ᚹ conditions' log_op' log_op''',log_op' log_op''',log_op' log_op''',ᛝ valor log_op' log_op''']


valor:[id,int,bool,char,float,op,#]
op:[conditions,arit_op]
arit_op:[arit_op',arit_op' ᚦ arit_op,arit_op' ᚧ arit_op,#]
arit_op':[arit_op'' arit_op''']
arit_op'':[id,int,bool,char,float,arit_op'' arit_op''',arit_op'' arit_op''' ᚦ arit_op,arit_op'' arit_op''' ᚧ arit_op,#,( arit_op )]


arit_op'':[id arit_op'''',int,bool arit_op'''',char arit_op'''',float arit_op'''',arit_op'''',( arit_op ) arit_op'''']
arit_op'''':[arit_op''' arit_op'''',arit_op''' ᚦ arit_op arit_op'''',arit_op''' ᚧ arit_op arit_op'''',#]